generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 Int               @id @default(autoincrement())
  username           String            @unique
  auth_user_id       String            @unique @db.Uuid
  created_at         DateTime          @default(now())
  first_name         String
  last_name          String
  email              String            @unique
  phone_number       String            @unique @db.VarChar(12)
  street_address     String
  address_line_2     String?
  city               String
  state_or_territory USStateTerritory
  postal_code        String            @db.VarChar(10)
  country            String            @default("United States")
  role               RoleEnum
  billpay_rules      BillPayRule[]
  external_accounts  ExternalAccount[]
  internal_accounts  InternalAccount[]
  transfer_rules     TransferRule[]

  @@map("users")
}

model InternalAccount {
  id                  Int             @id @default(autoincrement())
  account_number      String          @unique @db.VarChar(17)
  routing_number      String          @default("724722907") @db.Char(9)
  user_id             Int
  created_at          DateTime        @default(now())
  account_type        AccountTypeEnum
  is_active           Boolean         @default(true)
  balance             Decimal         @default(0) @db.Decimal(19, 4)
  billpay_rules       BillPayRule[]
  user                User            @relation(fields: [user_id], references: [id])
  transactions        Transaction[]
  transfer_rules_to   TransferRule[]  @relation("TransferRuleDestinationInternal")
  transfer_rules_from TransferRule[]  @relation("TransferRuleSourceInternal")

  @@index([user_id])
  @@map("internal_accounts")
}

model ExternalAccount {
  id                             Int            @id @default(autoincrement())
  nickname                       String?        @db.VarChar(30)
  user_id                        Int
  account_number                 String         @db.VarChar(17)
  routing_number                 String         @db.Char(9)
  user                           User           @relation(fields: [user_id], references: [id])
  transfer_rules_as_counterparty TransferRule[] @relation("TransferRuleDestinationExternal")

  @@unique([user_id, routing_number, account_number])
  @@index([user_id])
  @@map("external_accounts")
}

model Transaction {
  id                      Int                   @id @default(autoincrement())
  created_at              DateTime              @default(now())
  updated_at              DateTime              @updatedAt
  amount                  Decimal               @db.Decimal(19, 4)
  status                  TransactionStatusEnum
  transaction_type        TransactionTypeEnum
  check_number            String?               @db.VarChar(12)
  internal_account_id     Int
  external_routing_number String?               @db.Char(9)
  external_account_number String?               @db.VarChar(17)
  external_nickname       String?               @db.VarChar(30)
  direction               PaymentDirection
  transfer_rule_id        Int?
  bill_pay_rule_id        Int?
  idempotency_key         String?               @unique
  bill_pay_rule           BillPayRule?          @relation(fields: [bill_pay_rule_id], references: [id])
  internal_account        InternalAccount       @relation(fields: [internal_account_id], references: [id], onDelete: Cascade)
  transfer_rule           TransferRule?         @relation(fields: [transfer_rule_id], references: [id])

  @@index([internal_account_id])
  @@index([transfer_rule_id])
  @@index([bill_pay_rule_id])
  @@index([internal_account_id, created_at(sort: Desc)])
  @@index([status, created_at(sort: Desc)])
  @@index([status, transaction_type])
  @@map("transactions")
}

model TransferRule {
  id                      Int              @id @default(autoincrement())
  user_id                 Int
  transfer_kind           TransferKind     @default(recurring)
  direction               PaymentDirection
  amount                  Decimal          @db.Decimal(19, 4)
  frequency               String?
  start_time              DateTime
  end_time                DateTime?
  run_at                  DateTime?
  source_internal_id      Int
  destination_internal_id Int?
  destination_external_id Int?
  external_routing_number String?          @db.Char(9)
  external_account_number String?          @db.VarChar(17)
  transactions            Transaction[]
  destination_external    ExternalAccount? @relation("TransferRuleDestinationExternal", fields: [destination_external_id], references: [id])
  destination_internal    InternalAccount? @relation("TransferRuleDestinationInternal", fields: [destination_internal_id], references: [id])
  source_internal         InternalAccount  @relation("TransferRuleSourceInternal", fields: [source_internal_id], references: [id])
  user                    User             @relation(fields: [user_id], references: [id])

  @@index([user_id])
  @@index([source_internal_id])
  @@index([destination_internal_id])
  @@index([destination_external_id])
  @@map("transfer_rules")
}

model BillPayRule {
  id                 Int             @id @default(autoincrement())
  user_id            Int
  source_internal_id Int
  payee_id           Int
  amount             Decimal         @db.Decimal(19, 4)
  frequency          String
  start_time         DateTime
  end_time           DateTime?
  last_run           DateTime?
  next_run           DateTime?
  payee              BillPayPayee    @relation(fields: [payee_id], references: [id])
  source_internal    InternalAccount @relation(fields: [source_internal_id], references: [id])
  user               User            @relation(fields: [user_id], references: [id])
  transactions       Transaction[]

  @@index([user_id])
  @@index([source_internal_id])
  @@index([payee_id])
  @@map("billpay_rules")
}

model BillPayPayee {
  id                 Int              @id @default(autoincrement())
  business_name      String
  email              String
  phone              String
  street_address     String
  address_line_2     String?
  city               String
  state_or_territory USStateTerritory
  postal_code        String           @db.VarChar(10)
  country            String           @default("United States")
  account_number     String           @db.VarChar(17)
  routing_number     String           @db.Char(9)
  is_active          Boolean          @default(true)
  billPayRules       BillPayRule[]

  @@index([business_name])
  @@map("billpay_payees")
}

enum RoleEnum {
  customer
  bank_manager
}

enum USStateTerritory {
  AL
  AK
  AZ
  AR
  CA
  CO
  CT
  DE
  DC
  FL
  GA
  HI
  ID
  IL
  IN
  IA
  KS
  KY
  LA
  ME
  MD
  MA
  MI
  MN
  MS
  MO
  MT
  NE
  NV
  NH
  NJ
  NM
  NY
  NC
  ND
  OH
  OK
  OR
  PA
  RI
  SC
  SD
  TN
  TX
  UT
  VT
  VA
  WA
  WV
  WI
  WY
  PR
  GU
  VI
  AS
  MP
}

enum AccountTypeEnum {
  savings
  checking
}

enum TransactionStatusEnum {
  approved
  denied
}

enum TransactionTypeEnum {
  internal_transfer
  external_transfer
  billpay
  deposit
  withdrawal
}

enum PaymentDirection {
  outbound
  inbound
}

enum TransferKind {
  recurring
  one_off
}
